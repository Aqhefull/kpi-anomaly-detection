{"version":3,"sources":["img/loading.gif","listItems.js","SimpleLineChart.js","SimpleTable.js","AnomalyTable.js","anomalyFinder.js","AnomalyChart.js","Dashboard.js","HomeMoving.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","mainListItems","react_default","a","createElement","Link","to","style","textDecoration","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","Warning_default","SimpleLineChart","props","movingBase","weekDay","ResponsiveContainer_default","width","height","LineChart_default","data","XAxis_default","dataKey","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","Line_default","name","type","stroke","rowHeight","withStyles","root","overflowX","classes","targetElement","Paper_default","className","es","_ref","headerHeight","rowGetter","_ref2","index","rowCount","length","overscanRowCount","label","cellDataGetter","_ref3","rowData","Date","toString","_ref4","device","_ref5","AnomalyTable","_this$props","this","console","log","Component","AnomalyFinder","values","pow","arguments","undefined","sum","i","Math","ex","ex2","expectedValue","sqrt","normalValues","value","stdv","standardDeviation","abs","AnomalyChart","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","anomalyDatabase","anomalySearchDone","daysMiddle","anomalyBase","weekBigData","count","af","elem","forEach","interval","push","reduce","b","setState","el","find","id","timeDuration","searchAnomalyInData","nextProps","Fragment","ReferenceLine_default","y","dot","strokeWidth","fontWeight","color","src_AnomalyTable","Dashboard","handleDrawerOpen","open","handleDrawerClose","handleChange","event","defineProperty","target","labelWidth","homeMoving","finalBaseDone","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","_this2","BrowserRouter","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","component","variant","noWrap","title","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","Route","exact","path","render","appBarSpacer","display","justifyContent","alignItems","gutterBottom","autoComplete","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","inputProps","finalBase","map","MenuItem_default","key","day","chartContainer","src_SimpleLineChart","tableContainer","src_SimpleTable","smartGrid","AnomalyChart_AnomalyChart","assign","src","loading","alt","theme","margin","spacing","unit","minWidth","selectEmpty","marginTop","paddingRight","objectSpread","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","breakpoints","up","overflow","h5","marginBottom","HomeMoving","deviceLocation","currentDay","currentDate","deviceLocationMoved","deviceLocationMovedBase","currDayIntervals","currDayIntervalsCounter","currentDayIteration","startDate","moment","set","h","m","s","valueOf","endDate","format","toConsumableArray","startTime","endTime","response","endOfMainBase","d","outer","generateCurrDayIntervals","j","days","element","elementDate","date","calendar","elementTime","k","location","axios","get","renderHouseMoveTable","_context","t0","src_Dashboard","Boolean","window","hostname","match","HomeMoving_HomeMoving","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca8a3281.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.3b928cd4.gif\";","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Головна\" />\r\n      </ListItem>\r\n    </Link>\r\n    <Link to=\"/activity\" style={{ textDecoration: 'none' }}>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <WarningIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Активність\" />\r\n      </ListItem>\r\n    </Link>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\n\r\n// const data = [\r\n//   { name: 'Mon', Visits: 2200, Orders: 3400 },\r\n//   { name: 'Tue', Visits: 1280, Orders: 2398 },\r\n//   { name: 'Wed', Visits: 5000, Orders: 4300 },\r\n//   { name: 'Thu', Visits: 4780, Orders: 2908 },\r\n//   { name: 'Fri', Visits: 5890, Orders: 4800 },\r\n//   { name: 'Sat', Visits: 4390, Orders: 3800 },\r\n//   { name: 'Sun', Visits: 4490, Orders: 4300 },\r\n// ];\r\n\r\nfunction SimpleLineChart(props) {\r\n  const { movingBase, weekDay } = props;\r\n  return (\r\n    // 99% per https://github.com/recharts/recharts/issues/172\r\n    <ResponsiveContainer width=\"99%\" height={320}>\r\n      <LineChart data={movingBase[weekDay].data}>\r\n        <XAxis dataKey=\"timeDuration\" />\r\n        <YAxis />\r\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line name=\"Кількість переміщень\" type=\"monotone\" dataKey=\"count\" stroke=\"#8884d8\" />\r\n        {/* <Line type=\"monotone\" dataKey=\"Orders\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport 'react-virtualized/styles.css'\r\nimport { Table, Column, AutoSizer } from \"react-virtualized\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflowX: 'auto',\r\n  }\r\n};\r\nconst rowHeight = 50;\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes, targetElement } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <AutoSizer>\r\n        {({ width, height }) => {\r\n          return (\r\n\r\n            <Table\r\n              width={width}\r\n              height={height}\r\n              headerHeight={50}\r\n              rowHeight={rowHeight}\r\n              rowGetter={({ index }) => targetElement[index]}\r\n              rowCount={targetElement.length}\r\n              overscanRowCount={3} >\r\n              <Column\r\n                width={50}\r\n                label='#'\r\n                dataKey='id'\r\n              />\r\n              <Column\r\n                width={200}\r\n                label='Дата'\r\n                dataKey='date'\r\n                cellDataGetter={({ dataKey, rowData }) => new Date(rowData[dataKey]).toString()}\r\n              />\r\n              <Column\r\n                width={100}\r\n                label='Датчик'\r\n                cellDataGetter={({ dataKey, rowData }) => rowData.device[dataKey]}\r\n                dataKey='type'\r\n              />\r\n              <Column\r\n                width={100}\r\n                label='Локація'\r\n                cellDataGetter={({ dataKey, rowData }) => rowData.device[dataKey]}\r\n                dataKey='location'\r\n\r\n              />\r\n            </Table>\r\n          )\r\n        }}\r\n      </AutoSizer>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport 'react-virtualized/styles.css'\r\nimport { Table, Column, AutoSizer } from \"react-virtualized\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    height: '300px',\r\n    overflowX: 'auto',\r\n  }\r\n};\r\nconst rowHeight = 50;\r\n\r\nclass AnomalyTable extends Component {\r\n  render() {\r\n    const { classes, targetElement } = this.props;\r\n    console.log('AnomalyTable: ', targetElement)\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <AutoSizer>\r\n          {({ width, height }) => {\r\n            return (\r\n\r\n              <Table\r\n                width={width}\r\n                height={height}\r\n                headerHeight={50}\r\n                rowHeight={rowHeight}\r\n                rowGetter={({ index }) => targetElement[index]}\r\n                rowCount={targetElement.length}\r\n                overscanRowCount={2}\r\n              >\r\n                <Column\r\n                  width={50}\r\n                  label='#'\r\n                  dataKey='id'\r\n                />\r\n                <Column\r\n                  width={200}\r\n                  label='Часовий інтервал'\r\n                  dataKey='timeDuration'\r\n                />\r\n                <Column\r\n                  width={200}\r\n                  label='Кількість переміщень'\r\n                  dataKey='count'\r\n                />\r\n              </Table>\r\n            )\r\n          }}\r\n        </AutoSizer>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nAnomalyTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AnomalyTable);\r\n","class AnomalyFinder {\r\n\r\n  construct() { }\r\n\r\n  /**\r\n  * Calculating expected value (EX) of a list of values.\r\n  * https://en.wikipedia.org/wiki/Expected_value\r\n  *\r\n  * @param {array} values - list of values\r\n  * @param {integer} pow - power to be used during summation\r\n  * @returns {float}\r\n  */\r\n  expectedValue(values, pow = 1) {\r\n    const accuracy = 0.1;\r\n    let sum = 0;\r\n\r\n    if (!values.length) return 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      sum += Math.pow(values[i], pow) / accuracy;\r\n    }\r\n    return sum / (values.length / accuracy);\r\n  }\r\n\r\n  /**\r\n  * Calculating standard deviation (sigma) of a list of values.\r\n  * https://en.wikipedia.org/wiki/Standard_deviation\r\n  *\r\n  * @param {array} values - list of values\r\n  * @param {float} ex - expected value (EX)\r\n  * @returns {float}\r\n  */\r\n  standardDeviation(values, ex) {\r\n    const ex2 = this.expectedValue(values, 2);\r\n    ex = ex || this.expectedValue(values);\r\n    return Math.sqrt(ex2 - Math.pow(ex, 2));\r\n  }\r\n\r\n  /**\r\n  * Check (three-sigma rule of thumb) value if it is anomaly (true/false).\r\n  * https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\r\n  *\r\n  * @param {array} normalValues - list of normal values\r\n  * @param {integer} value - a value to check against the normal values\r\n  * @returns {boolean} \r\n  */\r\n  find(normalValues, value) {\r\n    const ex = this.expectedValue(normalValues);\r\n    const stdv = this.standardDeviation(normalValues, ex);\r\n    return !(Math.abs(ex - value) <= (3 * stdv));\r\n  }\r\n};\r\n\r\nexport default AnomalyFinder;\r\n","import React, {Component} from 'react';\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\nimport ReferenceLine from 'recharts/lib/cartesian/ReferenceLine';\r\nimport AnomalyTable from './AnomalyTable';\r\nimport AnomalyFinder from './anomalyFinder';\r\n\r\n\r\nexport default class AnomalyChart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      anomalyDatabase: [],\r\n      anomalySearchDone: false,\r\n      daysMiddle: 0\r\n    }\r\n  }\r\n\r\n\r\n\r\n  searchAnomalyInData(props) {\r\n    const { movingBase, weekDay } = props;\r\n    let anomalyBase = [];\r\n    let weekBigData = [];\r\n    let count = 1;\r\n    const af = new AnomalyFinder();\r\n    for (let elem = 0; elem < movingBase.length; elem++) {\r\n      const element = movingBase[elem];\r\n      element.data.forEach(interval => {\r\n        weekBigData.push(interval.count)\r\n      });\r\n\r\n    }\r\n    const sum = weekBigData.reduce(add, 0);\r\n    function add(a, b) {\r\n      return a + b;\r\n    }\r\n    this.setState({\r\n      daysMiddle: (sum / (weekBigData.length - 1)) * 10\r\n    })\r\n    const normalValues = weekBigData;\r\n    movingBase[weekDay].data.forEach(el => {\r\n\r\n      if(af.find(normalValues, el.count)) {\r\n        anomalyBase.push({\r\n          id: count,\r\n          timeDuration: el.timeDuration,\r\n          count: el.count\r\n        })\r\n        count += 1\r\n      }\r\n    })\r\n    this.setState({\r\n      anomalyDatabase: anomalyBase,\r\n      anomalySearchDone: true\r\n    })\r\n  }\r\n  componentDidMount(){\r\n    this.searchAnomalyInData(this.props)\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    this.searchAnomalyInData(nextProps)\r\n  }\r\n  \r\n  render(){\r\n    const { movingBase, weekDay } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <ResponsiveContainer width=\"99%\" height={320}>\r\n          <LineChart data={movingBase[weekDay].data}>\r\n            <XAxis dataKey=\"timeDuration\" />\r\n            <YAxis />\r\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <ReferenceLine y={this.state.daysMiddle} label=\"Приблизна аномальна межа\" stroke=\"red\" />\r\n            <Line name=\"Кількість переміщень\" type=\"monotone\" dataKey=\"count\" dot={{ stroke: '#3f51b5', strokeWidth: 2 }} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n        <div>\r\n          {\r\n            this.state.anomalySearchDone ? <p style={{ fontWeight: '700' }}>Знайдено аномалій: <span style={{color: 'red'}}>{this.state.anomalyDatabase.length}</span></p> : null\r\n          }\r\n        </div>\r\n        {(this.state.anomalyDatabase.length) ? <AnomalyTable targetElement={this.state.anomalyDatabase} /> : null}\r\n       \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems } from './listItems';\r\nimport SimpleLineChart from './SimpleLineChart';\r\nimport SimpleTable from './SimpleTable';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport loading from './img/loading.gif'\r\nimport AnomalyChart from './AnomalyChart';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    position: 'relative'\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true,\r\n      weekDay: 0,\r\n      labelWidth: 0,\r\n    }\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.homeMoving.finalBaseDone !== nextProps.homeMoving.finalBaseDone) {\r\n      return true\r\n    }\r\n    if (this.props.homeMoving.finalBaseDone) {\r\n      return true\r\n    } else return false\r\n\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.homeMoving.finalBaseDone) {\r\n      this.setState({\r\n        labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { classes, homeMoving } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"absolute\"\r\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n          >\r\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={classNames(\r\n                  classes.menuButton,\r\n                  this.state.open && classes.menuButtonHidden,\r\n                )}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                FEL | SmartGrid Watch System v. 1.0.0\r\n            </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>{mainListItems}</List>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            {\r\n              homeMoving.finalBaseDone\r\n                ? (\r\n                  <React.Fragment>\r\n                    <Route exact path='/' render={() => (\r\n                        <div>\r\n                          <div className={classes.appBarSpacer} />\r\n                          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\">Активність за день</Typography>\r\n                            <form className={classes.root} autoComplete=\"off\">\r\n                              <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"weekDay-simple\">Оберіть день</InputLabel>\r\n                                <Select\r\n                                  value={this.state.weekDay}\r\n                                  onChange={this.handleChange}\r\n                                  inputProps={{\r\n                                    name: 'weekDay',\r\n                                    id: 'weekDay-simple',\r\n                                  }}\r\n                                >\r\n                                  {\r\n                                    homeMoving.finalBase.map((el, i) => {\r\n                                      return <MenuItem key={i} value={i}>{el.day}</MenuItem>\r\n                                    })\r\n                                  }\r\n                                </Select>\r\n                              </FormControl>\r\n                            </form>\r\n                          </div>\r\n                          <Typography component=\"div\" className={classes.chartContainer}>\r\n                            <SimpleLineChart weekDay={this.state.weekDay} movingBase={homeMoving.finalBase} />\r\n                          </Typography>\r\n                          <Typography variant=\"h4\" gutterBottom component=\"h2\">Покази датчиків</Typography>\r\n                          <div className={classes.tableContainer}>\r\n                            <SimpleTable targetElement={homeMoving.smartGrid} />\r\n                          </div>\r\n                        </div>\r\n                    )} />\r\n                    <Route path='/activity' render={(props) => (\r\n                        <div>\r\n                          <div className={classes.appBarSpacer} />\r\n                          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\">Активність за день</Typography>\r\n                            <form className={classes.root} autoComplete=\"off\">\r\n                              <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"weekDay-simple\">Оберіть день</InputLabel>\r\n                                <Select\r\n                                  value={this.state.weekDay}\r\n                                  onChange={this.handleChange}\r\n                                  inputProps={{\r\n                                    name: 'weekDay',\r\n                                    id: 'weekDay-simple',\r\n                                  }}\r\n                                >\r\n                                  {\r\n                                    homeMoving.finalBase.map((el, i) => {\r\n                                      return <MenuItem key={i} value={i}>{el.day}</MenuItem>\r\n                                    })\r\n                                  }\r\n                                </Select>\r\n                              </FormControl>\r\n                            </form>\r\n                          </div>\r\n                          <AnomalyChart {...props} weekDay={this.state.weekDay} movingBase={homeMoving.finalBase} />\r\n                        </div>\r\n                    )} />\r\n                  </React.Fragment>\r\n\r\n                )\r\n                : (\r\n                  <div className=\"preloader\">\r\n                    <img src={loading} alt=\"Loading..\" />\r\n                  </div>\r\n                )\r\n            }\r\n\r\n\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\n\r\nimport Dashboard from './Dashboard'\r\n\r\nexport default class HomeMoving extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      finalBaseDone: false,\r\n      smartGrid: {},\r\n      deviceLocation: '',\r\n      currentDay: 0,\r\n      currentDate: '',\r\n      deviceLocationMoved: 0,\r\n      deviceLocationMovedBase: [],\r\n      currDayIntervals: [],\r\n      currDayIntervalsCounter: 0,\r\n      currentDayIteration: 0,\r\n      finalBase: []\r\n    }\r\n  }\r\n  generateCurrDayIntervals() {\r\n    let startDate = moment().set({ h: 0, m: 0, s: 0 }).valueOf() + (this.state.currDayIntervalsCounter) * 60000\r\n    let endDate = moment().set({ h: 0, m: 5, s: 0 }).valueOf() + (this.state.currDayIntervalsCounter) * 60000\r\n    if (moment(endDate).format('HH:mm:ss') === \"00:00:00\") {\r\n      endDate = moment().set({ h: 23, m: 59, s: 59 }).valueOf()\r\n    }\r\n    this.setState({\r\n      currDayIntervals: [...this.state.currDayIntervals, {\r\n        startTime: moment(startDate).format('HH:mm:ss'),\r\n        endTime: moment(endDate).format('HH:mm:ss')\r\n      }],\r\n      currDayIntervalsCounter: this.state.currDayIntervalsCounter + 5\r\n    });\r\n  }\r\n  renderHouseMoveTable(response) {\r\n    const interval = 5; //5 min interval\r\n    const dayIntervals = (24 * 60) / interval;\r\n    endOfMainBase:\r\n    for (let d = this.state.currentDay; d < ((this.state.currentDay + 1) * 2); d++) {\r\n      outer:\r\n      for (let i = 0; i < dayIntervals; i++) {\r\n        this.generateCurrDayIntervals()\r\n        for (let j = this.state.currentDayIteration; j < response.data.days.length; j++) {\r\n          if (j === response.data.days.length - 1) {\r\n            break endOfMainBase;\r\n          }\r\n          const element = response.data.days[j];\r\n          element.id = j\r\n          const elementDate = moment(element.date).calendar()\r\n          const elementTime = moment(element.date).format('HH:mm:ss')\r\n          //Если новая дата то делаем что-то и обновляем дату\r\n          if (elementDate !== this.state.currentDate) {\r\n            if (this.state.finalBase.length === 0) {\r\n              this.setState({\r\n                deviceLocationMovedBase: [],\r\n                deviceLocationMoved: 0,\r\n                currentDate: elementDate,\r\n                currDayIntervals: [],\r\n                currDayIntervalsCounter: 0,\r\n                finalBase: [...this.state.finalBase, {\r\n                  day: this.state.currentDate,\r\n                  data: this.state.deviceLocationMovedBase\r\n                }],\r\n                currentDayIteration: j\r\n              })\r\n              console.log(`%c -> Day render ${this.state.currentDay} ..`, 'background: #20c997; color: #000')\r\n              break outer;\r\n            }\r\n            for (let k = 0; k < this.state.finalBase.length; k++) {\r\n              const element = this.state.finalBase[k];\r\n              if (element.day !== this.state.currentDate) {\r\n                this.setState({\r\n                  deviceLocationMovedBase: [],\r\n                  deviceLocationMoved: 0,\r\n                  currentDate: elementDate,\r\n                  currDayIntervals: [],\r\n                  currDayIntervalsCounter: 0,\r\n                  finalBase: [...this.state.finalBase, {\r\n                    day: this.state.currentDate,\r\n                    data: this.state.deviceLocationMovedBase\r\n                  }],\r\n                  currentDayIteration: j\r\n                })\r\n                console.log(`%c -> Day render ${this.state.currentDay} ..`, 'background: #20c997; color: #000')\r\n                break outer;\r\n              }\r\n            }\r\n          }\r\n          if (elementTime > this.state.currDayIntervals[i].startTime && elementTime < this.state.currDayIntervals[i].endTime) {\r\n            //console.log(`%c ${this.state.currDayIntervals[i].startTime} -> ${elementTime} -> ${this.state.currDayIntervals[i].endTime}`, 'background: #ffc107; color: #000; font-weight: bold;')\r\n            // Если локация поменялась, то инкрементируем текущее кол-во перемещений\r\n            if (element.device.location !== this.state.deviceLocation) {\r\n              //console.log(`%c Локация: ${element.device.location} !==  Локации: ${this.state.deviceLocation}`, 'background: #dc3545; color: #fff')\r\n              this.setState({\r\n                deviceLocation: element.device.location,\r\n                deviceLocationMoved: this.state.deviceLocationMoved + 1,\r\n                currentDayIteration: j\r\n              })\r\n              //console.log('%c Замечена активность: ', 'background: #222; color: #fff', this.state)\r\n            }\r\n            if (response.data.days[j + 1] && (moment(response.data.days[j + 1].date).calendar() !== elementDate)) {\r\n              //console.log(`%c this ${elementDate} !== next day ${moment(response.data.days[j + 1].date).calendar()}`, 'background: #e83e8c; color: #fff')\r\n              this.setState({\r\n                deviceLocationMovedBase: [...this.state.deviceLocationMovedBase, {\r\n                  count: this.state.deviceLocationMoved,\r\n                  timeDuration: `${this.state.currDayIntervals[i].startTime} - ${this.state.currDayIntervals[i].endTime}`,\r\n                  date: this.state.currentDate\r\n                }],\r\n                currentDayIteration: j + 1,\r\n                currentDay: this.state.currentDay + 1,\r\n              })\r\n              break;\r\n            }\r\n            if (response.data.days[j + 1] === undefined) {\r\n              this.setState({\r\n                deviceLocationMovedBase: [...this.state.deviceLocationMovedBase, {\r\n                  count: this.state.deviceLocationMoved,\r\n                  timeDuration: `${this.state.currDayIntervals[i].startTime} - ${this.state.currDayIntervals[i].endTime}`,\r\n                  date: this.state.currentDate\r\n                }],\r\n                deviceLocationMoved: 0,\r\n                currentDayIteration: j\r\n              })\r\n              this.setState({\r\n                deviceLocationMovedBase: [],\r\n                deviceLocationMoved: 0,\r\n                currentDate: elementDate,\r\n                currDayIntervals: [],\r\n                currDayIntervalsCounter: 0,\r\n                finalBase: [...this.state.finalBase, {\r\n                  day: this.state.currentDate,\r\n                  data: this.state.deviceLocationMovedBase\r\n                }],\r\n                currentDayIteration: j\r\n              })\r\n              break outer;\r\n            }\r\n          }\r\n          if (elementTime > this.state.currDayIntervals[i].endTime) {\r\n            this.setState({\r\n              deviceLocationMovedBase: [...this.state.deviceLocationMovedBase, {\r\n                count: this.state.deviceLocationMoved,\r\n                timeDuration: `${this.state.currDayIntervals[i].startTime} - ${this.state.currDayIntervals[i].endTime}`,\r\n                date: this.state.currentDate\r\n              }],\r\n              deviceLocationMoved: 0,\r\n              currentDayIteration: j\r\n            })\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n\r\n      const response = await axios.get('./Msn3.json');\r\n      this.setState({\r\n        deviceLocation: response.data.days[0].device.location,\r\n        currentDate: moment(response.data.days[0].date).calendar(),\r\n      })\r\n      console.log(`%c -> Day render ${this.state.currentDay} ..`, 'background: #20c997; color: #000')\r\n\r\n      this.renderHouseMoveTable(response)\r\n      this.setState({\r\n        deviceLocationMovedBase: [],\r\n        deviceLocationMoved: 0,\r\n        currDayIntervals: [],\r\n        currDayIntervalsCounter: 0,\r\n        finalBase: [...this.state.finalBase, {\r\n          day: this.state.currentDate,\r\n          data: this.state.deviceLocationMovedBase\r\n        }],\r\n        smartGrid: response.data.days\r\n      })\r\n\r\n      console.log('RESULT: ', this.state)\r\n      this.setState({\r\n        finalBaseDone: true\r\n      })\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return <Dashboard homeMoving={this.state} />\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomeMoving from './HomeMoving';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HomeMoving />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}